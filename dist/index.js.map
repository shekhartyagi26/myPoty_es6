{"version":3,"sources":["../src/index.js"],"names":["app","server","createServer","use","urlencoded","extended","initRoutes","cwd","resolve","err","routes","console","log","red","forEach","routePath","require","default","green","length","listen","process","env","PORT","address","port"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA,IAAMA,MAAM,wBAAZ,C,CAZA;;AAaAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAH,IAAIG,GAAJ,CAAQ,qBAAR;AACAH,IAAIG,GAAJ,CAAQ,mBAAR;;AAEA;AACAH,IAAIG,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGA,IAAMC,aAAa,SAAbA,UAAa,CAACN,GAAD,EAAS;AACxB;AACA,wBAAK,eAAL,EAAsB;AAClBO,aAAK,eAAKC,OAAL,CAAa,OAAb;AADa,KAAtB,EAEG,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAID,GAAJ,EAAS;AACLE,oBAAQC,GAAR,CAAY,gBAAMC,GAAN,CAAU,gCAAV,CAAZ;AACA;AACH;AACDH,eAAOI,OAAP,CAAe,UAACC,SAAD,EAAe;AAC1BC,oBAAQD,SAAR,EAAmBE,OAAnB,CAA2BjB,GAA3B,EAD0B,CACO;AACpC,SAFD;AAGAW,gBAAQC,GAAR,CAAY,gBAAMM,KAAN,CAAY,cAAcR,OAAOS,MAArB,GAA8B,cAA1C,CAAZ;AACH,KAXD;AAYH,CAdD;AAeAb,WAAWN,GAAX;;AAEAA,IAAIC,MAAJ,CAAWmB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC;AACAZ,QAAQC,GAAR,CAAY,qBAAqBZ,IAAIC,MAAJ,CAAWuB,OAAX,GAAqBC,IAAtD;kBACezB,G","file":"index.js","sourcesContent":["/* eslint-disable*/\nimport http from \"http\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport morgan from \"morgan\";\nimport path from \"path\";\nimport glob from \"glob\";\nimport chalk from \"chalk\";\nimport db from \"../mongodb/db.js\";\nimport bodyParser from \"body-parser\";\n\n\nconst app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan(\"dev\"));\napp.use(cors());\napp.use(db());\n\n// 3rd party middleware\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\nconst initRoutes = (app) => {\n    // including all routes\n    glob(\"./routes/*.js\", {\n        cwd: path.resolve(\"./src\")\n    }, (err, routes) => {\n        if (err) {\n            console.log(chalk.red(\"Error occured including routes\"));\n            return;\n        }\n        routes.forEach((routePath) => {\n            require(routePath).default(app); // eslint-disable-line\n        });\n        console.log(chalk.green(\"included \" + routes.length + \" route files\"));\n    });\n};\ninitRoutes(app);\n\napp.server.listen(process.env.PORT || 8080);\nconsole.log(\"Started on port \" + app.server.address().port);\nexport default app;\n"]}